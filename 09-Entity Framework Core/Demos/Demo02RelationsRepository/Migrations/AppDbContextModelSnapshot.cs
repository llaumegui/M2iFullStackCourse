// <auto-generated />
using System;
using Demo02RelationsRepository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Demo02RelationsRepository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Demo02RelationsRepository.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nom = "JohnnyHalliday115",
                            Url = "http://www.johnnyhalliday115.skyblog.com"
                        },
                        new
                        {
                            Id = 2,
                            Nom = "Koreus",
                            Url = "http://www.koreus.com"
                        },
                        new
                        {
                            Id = 3,
                            Nom = "Toto",
                            Url = "http://www.toto.com"
                        });
                });

            modelBuilder.Entity("Demo02RelationsRepository.Models.BlogHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogId")
                        .IsUnique();

                    b.ToTable("BlogHeaders");
                });

            modelBuilder.Entity("Demo02RelationsRepository.Models.BlogTag", b =>
                {
                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.HasKey("TagId", "BlogId");

                    b.HasIndex("BlogId");

                    b.ToTable("BlogTags");
                });

            modelBuilder.Entity("Demo02RelationsRepository.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatePublication")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogId = 1,
                            Contenu = "Trop triste :'(",
                            DatePublication = new DateTime(2025, 2, 4, 16, 21, 9, 607, DateTimeKind.Local).AddTicks(1289),
                            Titre = "Johnny est mort."
                        },
                        new
                        {
                            Id = 2,
                            BlogId = 2,
                            Contenu = "Le chat il tombe là",
                            DatePublication = new DateTime(2025, 2, 4, 16, 21, 9, 607, DateTimeKind.Local).AddTicks(1332),
                            Titre = "Trop mdr xd la vidéo OLALALA"
                        },
                        new
                        {
                            Id = 3,
                            BlogId = 2,
                            Contenu = "Le chien il tombe là",
                            DatePublication = new DateTime(2025, 2, 4, 16, 21, 9, 607, DateTimeKind.Local).AddTicks(1334),
                            Titre = "Trop mdr xd la vidéo 2"
                        },
                        new
                        {
                            Id = 4,
                            BlogId = 3,
                            Contenu = "Moi non plus la porte était fermée ^^",
                            DatePublication = new DateTime(2025, 2, 4, 16, 21, 9, 607, DateTimeKind.Local).AddTicks(1335),
                            Titre = "Tu connais la blague de toto aux toilettes ?"
                        });
                });

            modelBuilder.Entity("Demo02RelationsRepository.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Demo02RelationsRepository.Models.BlogHeader", b =>
                {
                    b.HasOne("Demo02RelationsRepository.Models.Blog", "Blog")
                        .WithOne("Header")
                        .HasForeignKey("Demo02RelationsRepository.Models.BlogHeader", "BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("Demo02RelationsRepository.Models.BlogTag", b =>
                {
                    b.HasOne("Demo02RelationsRepository.Models.Blog", "Blog")
                        .WithMany("BlogTags")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo02RelationsRepository.Models.Tag", "Tag")
                        .WithMany("BlogTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Demo02RelationsRepository.Models.Post", b =>
                {
                    b.HasOne("Demo02RelationsRepository.Models.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("Demo02RelationsRepository.Models.Blog", b =>
                {
                    b.Navigation("BlogTags");

                    b.Navigation("Header");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Demo02RelationsRepository.Models.Tag", b =>
                {
                    b.Navigation("BlogTags");
                });
#pragma warning restore 612, 618
        }
    }
}
